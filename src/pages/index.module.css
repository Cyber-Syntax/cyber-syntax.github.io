/**
 * CSS files with the .module.css suffix will be treated as CSS modules
 * and scoped locally.
 */

/* Homepage container */
.homepage {
  overflow-x: hidden;
  position: relative;
  min-height: calc(100vh - var(--ifm-navbar-height));
  background: var(--ifm-background-color);
}

/* Main hero section with animated background */
.heroContainer {
  padding: 5rem 2rem;
  position: relative;
  overflow: hidden;
  background: var(--ifm-background-color);
  min-height: 80vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Animated background comments */
.backgroundComments {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  overflow: hidden;
  pointer-events: none; /* Ensures comments don't interfere with clicks */
}

.codeComment {
  position: absolute;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  font-size: 1.2rem;
  font-weight: 600; /* Make text bolder */
  color: var(--ifm-color-primary-darker);
  transform: rotate(var(--rotation, -3deg));
  opacity: 0;
  animation: floatComment 15s linear infinite;
  animation-delay: var(--animation-delay, 0s);
  white-space: nowrap;
  text-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5); /* Add slight glow for better visibility */
}

[data-theme="dark"] .codeComment {
  color: var(--ifm-color-primary-light);
  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.7); /* Different shadow for dark mode */
}

@keyframes floatComment {
  0% {
    opacity: 0;
    transform: translateY(15px) translateX(-5px) rotate(var(--rotation, -3deg));
  }
  5% {
    opacity: var(--opacity, 0.15);
  }
  95% {
    opacity: var(--opacity, 0.15);
  }
  100% {
    opacity: 0;
    transform: translateY(-15px) translateX(5px) rotate(var(--rotation, -3deg));
  }
}

/* Hero content */
.heroContent {
  position: relative;
  z-index: 2;
  text-align: center;
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Split layout for hero area */
.heroSplitLayout {
  display: flex;
  width: 100%;
  align-items: flex-start;
  justify-content: center;
  gap: 3rem;
  margin-top: 2rem;
}

.heroLeftSection {
  flex: 1;
  max-width: 500px;
  text-align: left;
}

.heroRightSection {
  flex: 1;
  max-width: 500px;
  text-align: left;
}

/* About Me section */
.aboutMeSection {
  background: var(--ifm-background-color);
  border-radius: 12px;
  padding: 1.5rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(var(--ifm-color-primary-rgb), 0.2);
  margin-bottom: 2rem;
  /* Remove transparency to prevent background comments from showing through */
  backdrop-filter: blur(10px);
}

.aboutMeSection:hover {
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  transform: translateY(-3px);
}

.aboutMeHeader {
  display: flex;
  align-items: center;
  margin-bottom: 1.5rem;
  gap: 1rem;
}

.profilePicture {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  object-fit: cover;
  border: 3px solid var(--ifm-color-primary);
  box-shadow: 0 0 0 3px rgba(var(--ifm-color-primary-rgb), 0.2);
}

.aboutMeTitle {
  font-size: 1.5rem;
  margin-bottom: 0;
  display: flex;
  flex-direction: column;
  color: var(--ifm-color-primary-darker);
}

.aboutMeSubtitle {
  font-size: 0.9rem;
  opacity: 0.8;
  margin-top: 0.2rem;
}

.aboutMeContent {
  font-size: 1rem;
  line-height: 1.6;
  margin-bottom: 1rem;
}

.aboutMeSkills {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 1rem;
}

.skillTag {
  background: rgba(var(--ifm-color-primary-rgb), 0.1);
  color: var(--ifm-color-primary-darker);
  padding: 0.3rem 0.8rem;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: 500;
  transition: all 0.2s ease;
}

.skillTag:hover {
  background: rgba(var(--ifm-color-primary-rgb), 0.2);
  transform: translateY(-2px);
}

/* Terminal typing effect */
.typingEffectContainer {
  height: 40px;
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.typingEffect {
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  color: var(--ifm-color-primary-darker);
  font-size: 1.3rem;
  position: relative;
  display: inline-block;
}

[data-theme="dark"] .typingEffect {
  color: var(--ifm-color-primary-light);
}

.typingEffect::after {
  content: "|";
  position: absolute;
  right: -8px;
  animation: cursor-blink 1.1s step-end infinite;
}

@keyframes cursor-blink {
  0%, 100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

.heroTitle {
  font-size: 4rem;
  font-weight: 700;
  margin-bottom: 1rem;
  background: linear-gradient(90deg, var(--ifm-color-primary-darker) 0%, var(--ifm-color-primary) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: fadeSlideDown 1s ease-out;
}

.heroSubtitle {
  font-size: 1.5rem;
  margin-bottom: 3rem;
  color: var(--ifm-color-primary-dark);
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  animation: fadeSlideDown 1s ease-out 0.3s both;
}

/* Button sections */
.mainActions {
  animation: fadeIn 1s ease-out 0.6s both;
}

.portfolioButtons {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
  margin-bottom: 2rem;
}

.portfolioButton {
  width: 100%;
  text-align: center;
  border-radius: 8px;
  font-weight: 600;
  padding: 0.8rem 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.portfolioButtonIcon {
  margin-right: 8px;
}

.educationButton {
  grid-column: 1 / -1;
}

/* Border to line effect for buttons */
.btnBorderToLine {
  transition-property: all;
  transition-duration: .6s;
  transition-timing-function: ease;
}

.btnBorderToLineText {
  cursor: pointer;
  font-size: 16px;
  text-transform: uppercase;
  position: relative;
  padding: 10px;
  padding-top: 15px;
  text-decoration: none;
  transition: all .6s ease-in;
  background: transparent;
  outline: none;
  border: 0;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(10px);
}

.btnBorderToLineText:hover {
  font-weight: bold;
}

.btnBorderToLineText svg.btnBorder {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.btnBorderToLineText rect {
  fill: none;
  stroke-width: 3;
  stroke-dasharray: 412, 0;
  transition: all 0.5s linear;
}

.btnBorderToLineText:hover rect {
  stroke-width: 4;
  stroke-dasharray: 25, 370;
  stroke-dashoffset: 58;
  transition: all 1.9s cubic-bezier(0.19, 1, 0.22, 1);
}

/* Button colors */
.btnPrimary {
  color: var(--nord10);
}

.btnPrimary rect {
  stroke: var(--nord10);
}

[data-theme="dark"] .btnPrimary {
  color: var(--nord8);
}

[data-theme="dark"] .btnPrimary rect {
  stroke: var(--nord8);
}

.btnSecondary {
  color: var(--nord9);
}

.btnSecondary rect {
  stroke: var(--nord9);
}

[data-theme="dark"] .btnSecondary {
  color: var(--nord4);
}

[data-theme="dark"] .btnSecondary rect {
  stroke: var(--nord4);
}

/* Wiki section with dropdown */
.wikiSection {
  margin-top: 2.5rem;
  position: relative;
}

.wikiToggle {
  background: none;
  border: 2px solid var(--ifm-color-primary-light);
  color: var(--ifm-color-primary-dark);
  border-radius: 30px;
  padding: 10px 20px;
  font-size: 1.1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
  transition: all 0.3s ease;
}

.wikiToggle:hover {
  background: rgba(var(--ifm-color-primary-rgb), 0.1);
  transform: translateY(-2px);
}

.wikiToggleActive {
  background: var(--ifm-color-primary-light);
}

.wikiToggleIcon {
  margin-left: 8px;
  transition: transform 0.3s ease;
}

.wikiToggleActive .wikiToggleIcon {
  transform: rotate(180deg);
}

.wikiButtonsContainer {
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  margin-top: 0.5rem;
}

.wikiButtonsActive {
  max-height: 200px;
  opacity: 1;
  margin-top: 1.5rem;
}

/* Feature section */
.featureSection {
  padding: 4rem 0;
  background: var(--ifm-background-surface-color);
  position: relative;
  z-index: 3;
}

/* Animation keyframes */
@keyframes fadeSlideDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@media screen and (max-width: 996px) {
  .heroContainer {
    padding: 3rem 1rem;
    min-height: 60vh;
  }

  .heroTitle {
    font-size: 2.5rem;
  }

  .heroSubtitle {
    font-size: 1.2rem;
    margin-bottom: 2rem;
  }
  
  .codeComment {
    font-size: 0.9rem;
  }

  /* Make split layout responsive */
  .heroSplitLayout {
    flex-direction: column;
    gap: 1.5rem;
  }

  .heroLeftSection,
  .heroRightSection {
    max-width: 100%;
  }

  .aboutMeSection {
    margin-bottom: 1rem;
  }

  .aboutMeTitle {
    font-size: 1.3rem;
  }

  .aboutMeContent {
    font-size: 0.95rem;
  }

  .skillTag {
    font-size: 0.8rem;
    padding: 0.25rem 0.7rem;
  }
}

/* Legacy styles maintained for compatibility */
.heroBanner {
  padding: 4rem 0;
  text-align: center;
  position: relative;
  overflow: hidden;
}

@media screen and (max-width: 996px) {
  .heroBanner {
    padding: 2rem;
  }
}

.buttons {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 12px;
}

/* Enhanced button styling */
:global(.button--primary),
:global(.button--secondary) {
  position: relative;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important;
  z-index: 1;
  border-width: 2px !important;
  font-weight: 600 !important;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1) !important;
}

:global(.button--primary)::before,
:global(.button--secondary)::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: all 0.6s ease;
  z-index: -1;
}

:global(.button--primary):hover,
:global(.button--secondary):hover {
  transform: translateY(-3px) !important;
  box-shadow: 0 7px 14px rgba(0, 0, 0, 0.15) !important;
}

:global(.button--primary):hover::before,
:global(.button--secondary):hover::before {
  left: 100%;
}

:global(.button--primary):active,
:global(.button--secondary):active {
  transform: translateY(1px) !important;
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1) !important;
}

/* Primary button specific styles */
:global(.button--primary) {
  border-color: var(--nord10) !important;
}

:global(.button--primary):hover {
  background-color: var(--nord9) !important;
  border-color: var(--nord9) !important;
}

:global([data-theme="dark"] .button--primary) {
  border-color: var(--nord8) !important;
}

:global([data-theme="dark"] .button--primary):hover {
  background-color: var(--nord8) !important;
  border-color: var(--nord7) !important;
}

/* Secondary button specific styles */
:global(.button--secondary) {
  border-color: var(--nord9) !important;
  background-color: rgba(94, 129, 172, 0.1) !important;
  color: var(--nord10) !important;
}

:global(.button--secondary):hover {
  background-color: var(--nord9) !important;
  border-color: var(--nord10) !important;
  color: white !important;
}

:global([data-theme="dark"] .button--secondary) {
  border-color: var(--nord9) !important;
  background-color: rgba(94, 129, 172, 0.2) !important;
  color: var(--nord4) !important;
}

:global([data-theme="dark"] .button--secondary):hover {
  background-color: var(--nord9) !important;
  border-color: var(--nord8) !important;
  color: var(--nord6) !important;
}
