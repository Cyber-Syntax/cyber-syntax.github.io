"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8905],{7808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"environment/dotfiles-management-stow","title":"Dotfiles Management with GNU Stow","description":"1. Create folder ~/dotfiles","source":"@site/dev/environment/dotfiles-management-stow.md","sourceDirName":"environment","slug":"/environment/dotfiles-management-stow","permalink":"/dev/environment/dotfiles-management-stow","draft":false,"unlisted":false,"editUrl":"https://github.com/Cyber-Syntax/cyber-syntax.github.io/dev/environment/dotfiles-management-stow.md","tags":[{"inline":true,"label":"stow","permalink":"/dev/tags/stow"},{"inline":true,"label":"dotfiles","permalink":"/dev/tags/dotfiles"}],"version":"current","lastUpdatedBy":"Cyber-Syntax","lastUpdatedAt":1755272403000,"frontMatter":{"title":"Dotfiles Management with GNU Stow","id":"dotfiles-management-stow","tags":["stow","dotfiles"]},"sidebar":"defaultSidebar","previous":{"title":"Docusaurus Front Matter","permalink":"/dev/docusaurus/docusaurus-front-matter"},"next":{"title":"Git Fundamentals","permalink":"/dev/git/git-how-to"}}');var i=n(4848),o=n(8453);const l={title:"Dotfiles Management with GNU Stow",id:"dotfiles-management-stow",tags:["stow","dotfiles"]},r=void 0,a={},d=[];function c(e){const t={blockquote:"blockquote",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Create folder ~/dotfiles"}),"\n",(0,i.jsx)(t.li,{children:"initialize git repo"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'echo "# dotfiles" >> README.md\ngit init\ngit add README.md\ngit commit -m "first commit"\ngit branch -M main\ngit remote add origin https://github.com/Cyber-Syntax/dotfiles.git\ngit push -u origin main\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"3",children:["\n",(0,i.jsx)(t.li,{children:"take backup for your files you want to setup with gnu stow"}),"\n",(0,i.jsx)(t.li,{children:"Make folder for ~/.config"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"mkdir -p ~/dotfiles/dot-config/\n"})}),"\n",(0,i.jsxs)(t.ol,{start:"5",children:["\n",(0,i.jsx)(t.li,{children:"Copy your configs"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"cp -r ~/.config/nvim ~/dotfiles/dot-config/\n"})}),"\n",(0,i.jsxs)(t.ol,{start:"6",children:["\n",(0,i.jsx)(t.li,{children:"test stow dry without change anything to make sure about changes correct"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'stow -n -v --dotfiles --target="$HOME" .\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"7",children:["\n",(0,i.jsx)(t.li,{children:"If everythings work perfect, stow your files"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'stow --dotfiles --target="$HOME" .\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"8",children:["\n",(0,i.jsx)(t.li,{children:"make alias, zsh alias or bash. Also, stowrc alias too.\nmake a file ~/dotfiles/.stowrc"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'--dotfiles\n--target="$HOME"\n--ignore=.stowrc\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"9",children:["\n",(0,i.jsx)(t.li,{children:"stow files to symlink"}),"\n"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"[!WARNING]"}),"\n",(0,i.jsx)(t.p,{children:"stay on the ~/dotfiles dir or it will cause issue\nif you stay on the ~/dotfiles/dot-config/\nit would make symlink to ~/dotfiles/i3 , ~/dotfiles/nvim etc."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"stow .\n"})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var s=n(6540);const i={},o=s.createContext(i);function l(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);