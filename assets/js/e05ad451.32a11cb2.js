"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5052],{3371:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"git/bare-repo","title":"git bare repository","description":"source","source":"@site/dev/git/bare-repo.md","sourceDirName":"git","slug":"/git/bare-repo","permalink":"/dev/git/bare-repo","draft":false,"unlisted":false,"editUrl":"https://github.com/Cyber-Syntax/cyber-syntax.github.io/dev/git/bare-repo.md","tags":[{"inline":true,"label":"git","permalink":"/dev/tags/git"},{"inline":true,"label":"bare-repo","permalink":"/dev/tags/bare-repo"}],"version":"current","lastUpdatedBy":"Cyber-Syntax","lastUpdatedAt":1755259059000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"git bare repository","tags":["git","bare-repo"]},"sidebar":"defaultSidebar","previous":{"title":"Git Fundamentals","permalink":"/dev/git/git-how-to"},"next":{"title":"Git Troubleshoots","permalink":"/dev/git/git-troubleshoots"}}');var t=o(4848),i=o(8453);const a={sidebar_position:2,title:"git bare repository",tags:["git","bare-repo"]},l="How create bare repo",s={},d=[{value:"How to use .gitignore on bare repo?",id:"how-to-use-gitignore-on-bare-repo",level:2},{value:"How to get latest changes on bare-repo for other machines?",id:"how-to-get-latest-changes-on-bare-repo-for-other-machines",level:2},{value:"1. <strong>Reset the Local Repository</strong>",id:"1-reset-the-local-repository",level:3},{value:"How to not get changes from bare-repo branch? (e.g qtile/<strong>pycache</strong> problem)",id:"how-to-not-get-changes-from-bare-repo-branch-eg-qtilepycache-problem",level:2},{value:"How to revert one file?",id:"how-to-revert-one-file",level:2},{value:"git doesn&#39;t look for folder changes. Add bare-repo again when you add folder",id:"git-doesnt-look-for-folder-changes-add-bare-repo-again-when-you-add-folder",level:2},{value:"How to add new folder to bare-repo?",id:"how-to-add-new-folder-to-bare-repo",level:2},{value:"How to update bare-repo?",id:"how-to-update-bare-repo",level:2},{value:"How to show readme.md on bare-repo?",id:"how-to-show-readmemd-on-bare-repo",level:2}];function c(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"how-create-bare-repo",children:"How create bare repo"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"https://www.ackama.com/what-we-think/the-best-way-to-store-your-dotfiles-a-bare-git-repository-explained/",children:"source"}),"\n",(0,t.jsx)(r.code,{children:"git init --bare $HOME/dotfiles"})]}),"\n"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"add this to your .zshrc:"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-git",children:"alias git-bare='/usr/bin/git --git-dir=$HOME/dotfiles --work-tree=$HOME'\nalias bare='git --git-dir=$HOME/dotfiles --work-tree=$HOME'\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-git",children:"alias git-bare='git --git-dir=$HOME/dotfiles --work-tree=$HOME'\n"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Add files you want to commit"}),"\n"]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"[!Important] DELETE .git folder\nDelete this folder which bare-repo you add. You can't use bare-repo while using .git track for different repo?"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-git",children:"git-bare add ~/.git-bare/polybar ~/.git-bare/i3 ~/.git-bare/alacritty ~/Documents/screenloyout\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-git",children:'git-bare commit -m "add my files"\n'})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Add remote repo if you doing first time"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-git",children:"git-bare remote add origin <remote-url>\n"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Push change master or your ",(0,t.jsx)(r.code,{children:"branch-name"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-git",children:"git-bare push -u origin bare-repo\n"})}),"\n",(0,t.jsx)(r.h2,{id:"how-to-use-gitignore-on-bare-repo",children:"How to use .gitignore on bare repo?"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"[!important] bare-repo .gitignore\nFirstly you need to untrack files who is already tracked by git before using .gitignore."}),"\n"]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Create global exclude file to your specific location:"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"# it's exlude files here because bare repo use `--work-tree=$HOME`(e.g /home/<user>/)\nbare config --global core.excludefile ~/.gitignore\n# or\nbare config --global core.excludefile ~/Documents/.gitignore\n"})}),"\n",(0,t.jsxs)(r.ol,{start:"2",children:["\n",(0,t.jsxs)(r.li,{children:["Add file name to ",(0,t.jsx)(r.code,{children:"~/.gitignore"})]}),"\n",(0,t.jsxs)(r.li,{children:["Untrack if file already tracked by git or unstage if you commit the file. ",(0,t.jsx)(r.strong,{children:"==WARNING: THIS WOULD DELETE FILES=="})]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"bare rm -r --cached .stfolder .stversions\n"})}),"\n",(0,t.jsx)(r.h2,{id:"how-to-get-latest-changes-on-bare-repo-for-other-machines",children:"How to get latest changes on bare-repo for other machines?"}),"\n",(0,t.jsx)(r.p,{children:"If you want to completely replace your local files with the latest version from the bare repository's branch and discard any untracked or modified files, you can follow these steps:"}),"\n",(0,t.jsxs)(r.h3,{id:"1-reset-the-local-repository",children:["1. ",(0,t.jsx)(r.strong,{children:"Reset the Local Repository"})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"git fetch origin my-branch\nbare-fetch\n\ngit reset --hard origin/my-branch\nbare-reset\n"})}),"\n",(0,t.jsxs)(r.h2,{id:"how-to-not-get-changes-from-bare-repo-branch-eg-qtilepycache-problem",children:["How to not get changes from bare-repo branch? (e.g qtile/",(0,t.jsx)(r.strong,{children:"pycache"})," problem)"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"bare-push --force\n"})}),"\n",(0,t.jsx)(r.h2,{id:"how-to-revert-one-file",children:"How to revert one file?"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"# learn commit id\ngit-bare log --follow -p -- flake.lock\n# revert back to commit changes. This will modify flake.lock to that commit changes.\ngit-bare checkout <commit_id> -- flake.lock\n# Now you reverted back that commit changes to flake.lock\n# You can update file etc.\n"})}),"\n",(0,t.jsx)(r.h2,{id:"git-doesnt-look-for-folder-changes-add-bare-repo-again-when-you-add-folder",children:"git doesn't look for folder changes. Add bare-repo again when you add folder"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"For example, when you create a new folder or file inside qtile bare-repo don't update it via commit. Therefore, you need to add folder again to add new file and folders."}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"how-to-add-new-folder-to-bare-repo",children:"How to add new folder to bare-repo?"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'git-bare add ~/.git-bare/qtile\ngit-bare commit -m "add qtile"\ngit-bare push -u origin bare-repo\n'})}),"\n",(0,t.jsx)(r.h2,{id:"how-to-update-bare-repo",children:"How to update bare-repo?"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"git-bare status #to see modifications\ngit-bare commit -am 'updated <file_name>'\ngit-bare push -u origin bare-repo\n"})}),"\n",(0,t.jsx)(r.h2,{id:"how-to-show-readmemd-on-bare-repo",children:"How to show readme.md on bare-repo?"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["You just need to create readme.md folder like this:  ",(0,t.jsx)(r.code,{children:"qtile/docs/README.md"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"This will show README.md file on qtile folder."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h1,{id:"others",children:"Others"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"If you want to duplicate all the objects from the main repo, do this inside the main repo:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"git push --all <url-of-bare-repo>\n"})}),"\n",(0,t.jsx)(r.p,{children:"Alternatively, do a fetch inside the bare repo:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"git fetch <url-of-main-repo>\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["You cannot do a pull, because a pull wants to merge with ",(0,t.jsx)(r.code,{children:"HEAD"}),"\u200b, which a bare repo does not have.\nYou can add these as remotes to save yourself some typing in the future:\nI added origin to whatever-name section like this git-bare remote add origin ",(0,t.jsx)(r.code,{children:"bare-repo-url"})]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.code,{children:"git remote add <whatever-name> <url-of-other-repo>"})}),"\n",(0,t.jsx)(r.li,{children:"Then you can simply do"}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.code,{children:"git push --all <whatever-name>"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.code,{children:"git fetch <whatever-name>"})}),"\n",(0,t.jsxs)(r.li,{children:["depending on what repo you're in. If ",(0,t.jsx)(r.code,{children:"<whatever-name>"}),"\u200b is ",(0,t.jsx)(r.code,{children:"origin"}),"\u200b, you can even leave it out altogether."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,o)=>{o.d(r,{R:()=>a,x:()=>l});var n=o(6540);const t={},i=n.createContext(t);function a(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);